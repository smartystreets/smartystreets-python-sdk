class Response:
    def __init__(self, obj):
        self.smarty_key = obj.get('smarty_key', None)
        self.matched_address = get_matched_address(obj.get('matched_address', None))
        data_set_name = None
        data_subset_name = None
        if 'data_set_name' in obj:
            self.data_set_name = obj.get('data_set_name')
            data_set_name = obj.get('data_set_name')
        elif 'secondaries' in obj:
            data_set_name = 'secondary'

        if 'data_subset_name' in obj:
            self.data_subset_name = obj.get('data_subset_name', None)
            data_subset_name = obj.get('data_subset_name', None)
        elif 'count' in obj:
            data_set_name = 'secondary'
            data_subset_name = 'count'
            
        if data_set_name == 'secondary':
            if data_subset_name == 'count':
                self.count = obj.get('count', None)
            else:
                self.root_address = get_secondary_root_address(obj.get('root_address', None))
                if 'aliases' in obj:
                    self.aliases = get_secondary_aliases(obj.get('aliases', None))
                self.secondaries = get_secondary_secondaries(obj.get('secondaries', None))
        else:
            self.attributes = get_attributes(data_set_name, data_subset_name, obj.get('attributes', None))

    def __str__(self):
        lines = [self.__class__.__name__ + ':']
        for key, val in vars(self).items():
            lines += get_lines(key, val)
        return '\n    '.join(lines)

    def __eq__(self, __value: object) -> bool:
        return isinstance(__value, type(self)) and __value.smarty_key == self.smarty_key

def get_lines(key, val):
    lines = ['']
    if type(val) is list:
        if len(val) > 1:
            for item in val:
                if val.index(item) == 0:
                    lines += ['secondaries:']
                lines += get_lines(val.index(item), val[val.index(item)])
            return lines
        else:
            return get_lines(key, val[0])
    else:
        if type(key) == int:
            return '    {}: {}'.format(key, val).split('\n')
        return '{}: {}'.format(key, val).split('\n')

class MatchedAddress:
    def __init__(self, obj):
        self.street = obj.get('street', None)
        self.city = obj.get('city', None)
        self.state = obj.get('state', None)
        self.zipcode = obj.get('zipcode', None)

    def __str__(self):
        lines = ['']
        for key, val in vars(self).items():
            if type(val) is list:
                lines.append(key + ': ')
                for item in val:
                    for subkey, subval in vars(item).items():
                        lines += '    {}: {}'.format(subkey, subval).split('\n')
            else:
                lines.append(key + ': ' + str(val))
        return '\n    '.join(lines)

def get_matched_address(matched_address_obj):
    if matched_address_obj is None:
        return None
    output = []
    output.append(MatchedAddress(matched_address_obj))

    return output

def get_attributes(dataset, data_subset, attribute_obj):
    if dataset == "property":
        if data_subset == "financial":
            return FinancialAttributes(attribute_obj)
        if data_subset == "principal":
            return PrincipalAttributes(attribute_obj)
    if dataset == "geo-reference":
        return GeoReferenceOutputCategories(attribute_obj)
    if dataset == "risk":
        return RiskAttributes(attribute_obj)

class PrincipalAttributes:
    def __init__(self, obj):
        self.first_floor_sqft = obj.get('1st_floor_sqft', None)
        self.second_floor_sqft = obj.get('2nd_floor_sqft', None)
        self.acres = obj.get('acres', None)
        self.air_conditioner = obj.get('air_conditioner', None)
        self.arbor_pergola = obj.get('arbor_pergola', None)
        self.assessed_improvement_percent = obj.get('assessed_improvement_percent', None)
        self.assessed_improvement_value = obj.get('assessed_improvement_value', None)
        self.assessed_land_value = obj.get('assessed_land_value', None)
        self.assessed_value = obj.get('assessed_value', None)
        self.assessor_last_update = obj.get('assessor_last_update', None)
        self.assessor_taxroll_update = obj.get('assessor_taxroll_update', None)
        self.attic_area = obj.get('attic_area', None)
        self.attic_flag = obj.get('attic_flag', None)
        self.balcony = obj.get('balcony', None)
        self.balcony_area = obj.get('balcony_area', None)
        self.basement_sqft = obj.get('basement_sqft', None)
        self.basement_sqft_finished = obj.get('basement_sqft_finished', None)
        self.basement_sqft_unfinished = obj.get('basement_sqft_unfinished', None)
        self.bath_house = obj.get('bath_house', None)
        self.bath_house_sqft = obj.get('bath_house_sqft', None)
        self.bathrooms_partial = obj.get('bathrooms_partial', None)
        self.bathrooms_total = obj.get('bathrooms_total', None)
        self.bedrooms = obj.get('bedrooms', None)
        self.block1 = obj.get('block1', None)
        self.block2 = obj.get('block2', None)
        self.boat_access = obj.get('boat_access', None)
        self.boat_house = obj.get('boat_house', None)
        self.boat_house_sqft = obj.get('boat_house_sqft', None)
        self.boat_lift = obj.get('boat_lift', None)
        self.bonus_room = obj.get('bonus_room', None)
        self.breakfast_nook = obj.get('breakfast_nook', None)
        self.breezeway = obj.get('breezeway', None)
        self.building_definition_code = obj.get('building_definition_code', None)
        self.building_sqft = obj.get('building_sqft', None)
        self.cabin = obj.get('cabin', None)
        self.cabin_sqft = obj.get('cabin_sqft', None)
        self.canopy = obj.get('canopy', None)
        self.canopy_sqft = obj.get('canopy_sqft', None)
        self.carport = obj.get('carport', None)
        self.carport_sqft = obj.get('carport_sqft', None)
        self.cbsa_code = obj.get('cbsa_code', None)
        self.cbsa_name = obj.get('cbsa_name', None)
        self.cellar = obj.get('cellar', None)
        self.census_block = obj.get('census_block', None)
        self.census_block_group = obj.get('census_block_group', None)
        self.census_fips_place_code = obj.get('census_fips_place_code', None)
        self.census_tract = obj.get('census_tract', None)
        self.central_vacuum = obj.get('central_vacuum', None)
        self.code_title_company = obj.get('code_title_company', None)
        self.combined_statistical_area = obj.get('combined_statistical_area', None)
        self.community_rec = obj.get('community_rec', None)
        self.company_flag = obj.get('company_flag', None)
        self.congressional_district = obj.get('congressional_district', None)
        self.contact_city = obj.get('contact_city', None)
        self.contact_crrt = obj.get('contact_crrt', None)
        self.contact_full_address = obj.get('contact_full_address', None)
        self.contact_house_number = obj.get('contact_house_number', None)
        self.contact_mail_info_format = obj.get('contact_mail_info_format', None)
        self.contact_mail_info_privacy = obj.get('contact_mail_info_privacy', None)
        self.contact_mailing_county = obj.get('contact_mailing_county', None)
        self.contact_mailing_fips = obj.get('contact_mailing_fips', None)
        self.contact_post_direction = obj.get('contact_post_direction', None)
        self.contact_pre_direction = obj.get('contact_pre_direction', None)
        self.contact_state = obj.get('contact_state', None)
        self.contact_street_name = obj.get('contact_street_name', None)
        self.contact_suffix = obj.get('contact_suffix', None)
        self.contact_unit_designator = obj.get('contact_unit_designator', None)
        self.contact_value = obj.get('contact_value', None)
        self.contact_zip = obj.get('contact_zip', None)
        self.contact_zip4 = obj.get('contact_zip4', None)
        self.courtyard = obj.get('courtyard', None)
        self.courtyard_area = obj.get('courtyard_area', None)
        self.deck = obj.get('deck', None)
        self.deck_area = obj.get('deck_area', None)
        self.deed_document_page = obj.get('deed_document_page', None)
        self.deed_document_book = obj.get('deed_document_book', None)
        self.deed_document_number = obj.get('deed_document_number', None)
        self.deed_owner_first_name = obj.get('deed_owner_first_name', None)
        self.deed_owner_first_name2 = obj.get('deed_owner_first_name2', None)
        self.deed_owner_first_name3 = obj.get('deed_owner_first_name3', None)
        self.deed_owner_first_name4 = obj.get('deed_owner_first_name4', None)
        self.deed_owner_full_name = obj.get('deed_owner_full_name', None)
        self.deed_owner_full_name2 = obj.get('deed_owner_full_name2', None)
        self.deed_owner_full_name3 = obj.get('deed_owner_full_name3', None)
        self.deed_owner_full_name4 = obj.get('deed_owner_full_name4', None)
        self.deed_owner_last_name = obj.get('deed_owner_last_name', None)
        self.deed_owner_last_name2 = obj.get('deed_owner_last_name2', None)
        self.deed_owner_last_name3 = obj.get('deed_owner_last_name3', None)
        self.deed_owner_last_name4 = obj.get('deed_owner_last_name4', None)
        self.deed_owner_middle_name = obj.get('deed_owner_middle_name', None)
        self.deed_owner_middle_name = obj.get('deed_owner_middle_name', None)
        self.deed_owner_middle_name2 = obj.get('deed_owner_middle_name2', None)
        self.deed_owner_middle_name3 = obj.get('deed_owner_middle_name3', None)
        self.deed_owner_middle_name4 = obj.get('deed_owner_middle_name4', None)
        self.deed_owner_suffix = obj.get('deed_owner_suffix', None)
        self.deed_owner_suffix2 = obj.get('deed_owner_suffix2', None)
        self.deed_owner_suffix3 = obj.get('deed_owner_suffix3', None)
        self.deed_owner_suffix4 = obj.get('deed_owner_suffix4', None)
        self.deed_sale_date = obj.get('deed_sale_date', None)
        self.deed_sale_price = obj.get('deed_sale_price', None)
        self.deed_transaction_id = obj.get('deed_transaction_id', None)
        self.depth_linear_footage = obj.get('depth_linear_footage', None)
        self.disabled_tax_exemption = obj.get('disabled_tax_exemption', None)
        self.document_type_description = obj.get('document_type_description', None)
        self.driveway_sqft = obj.get('driveway_sqft', None)
        self.driveway_type = obj.get('driveway_type', None)
        self.effective_year_built = obj.get('effective_year_built', None)
        self.elevation_feet = obj.get('elevation_feet', None)
        self.elevator = obj.get('elevator', None)
        self.equestrian_arena = obj.get('equestrian_arena', None)
        self.escalator = obj.get('escalator', None)
        self.exercise_room = obj.get('exercise_room', None)
        self.exterior_walls = obj.get('exterior_walls', None)
        self.family_room = obj.get('family_room', None)
        self.fence = obj.get('fence', None)
        self.fence_area = obj.get('fence_area', None)
        self.fips_code = obj.get('fips_code', None)
        self.fire_resistance_code = obj.get('fire_resistance_code', None)
        self.fire_sprinklers_flag = obj.get('fire_sprinklers_flag', None)
        self.fireplace = obj.get('fireplace', None)
        self.fireplace_number = obj.get('fireplace_number', None)
        self.first_name = obj.get('first_name', None)
        self.first_name_2 = obj.get('first_name_2', None)
        self.first_name_3 = obj.get('first_name_3', None)
        self.first_name_4 = obj.get('first_name_4', None)
        self.flooring = obj.get('flooring', None)
        self.foundation = obj.get('foundation', None)
        self.game_room = obj.get('game_room', None)
        self.garage = obj.get('garage', None)
        self.garage_sqft = obj.get('garage_sqft', None)
        self.gazebo = obj.get('gazebo', None)
        self.gazebo_sqft = obj.get('gazebo_sqft', None)
        self.golf_course = obj.get('golf_course', None)
        self.grainery = obj.get('grainery', None)
        self.grainery_sqft = obj.get('grainery_sqft', None)
        self.great_room = obj.get('great_room', None)
        self.greenhouse = obj.get('greenhouse', None)
        self.greenhouse_sqft = obj.get('greenhouse_sqft', None)
        self.gross_sqft = obj.get('gross_sqft', None)
        self.guesthouse = obj.get('guesthouse', None)
        self.guesthouse_sqft = obj.get('guesthouse_sqft', None)
        self.handicap_accessibility = obj.get('handicap_accessibility', None)
        self.heat = obj.get('heat', None)
        self.heat_fuel_type = obj.get('heat_fuel_type', None)
        self.hobby_room = obj.get('hobby_room', None)
        self.homeowner_tax_exemption = obj.get('homeowner_tax_exemption', None)
        self.instrument_date = obj.get('instrument_date', None)
        self.intercom_system = obj.get('intercom_system', None)
        self.interest_rate_type_2 = obj.get('interest_rate_type_2', None)
        self.interior_structure = obj.get('interior_structure', None)
        self.kennel = obj.get('kennel', None)
        self.kennel_sqft = obj.get('kennel_sqft', None)
        self.land_use_code = obj.get('land_use_code', None)
        self.land_use_group = obj.get('land_use_group', None)
        self.land_use_standard = obj.get('land_use_standard', None)
        self.last_name = obj.get('last_name', None)
        self.last_name_2 = obj.get('last_name_2', None)
        self.last_name_3 = obj.get('last_name_3', None)
        self.last_name_4 = obj.get('last_name_4', None)
        self.latitude = obj.get('latitude', None)
        self.laundry = obj.get('laundry', None)
        self.lean_to = obj.get('lean_to', None)
        self.lean_to_sqft = obj.get('lean_to_sqft', None)
        self.legal_description = obj.get('legal_description', None)
        self.legal_unit = obj.get('legal_unit', None)
        self.lender_address = obj.get('lender_address', None)
        self.lender_address_2 = obj.get('lender_address_2', None)
        self.lender_city = obj.get('lender_city', None)
        self.lender_city_2 = obj.get('lender_city_2', None)
        self.lender_code_2 = obj.get('lender_code_2', None)
        self.lender_first_name = obj.get('lender_first_name', None)
        self.lender_first_name_2 = obj.get('lender_first_name_2', None)
        self.lender_last_name = obj.get('lender_last_name', None)
        self.lender_last_name_2 = obj.get('lender_last_name_2', None)
        self.lender_name = obj.get('lender_name', None)
        self.lender_name_2 = obj.get('lender_name_2', None)
        self.lender_seller_carry_back = obj.get('lender_seller_carry_back', None)
        self.lender_seller_carry_back_2 = obj.get('lender_seller_carry_back_2', None)
        self.lender_state = obj.get('lender_state', None)
        self.lender_state_2 = obj.get('lender_state_2', None)
        self.lender_zip = obj.get('lender_zip', None)
        self.lender_zip_2 = obj.get('lender_zip_2', None)
        self.lender_zip_extended = obj.get('lender_zip_extended', None)
        self.lender_zip_extended_2 = obj.get('lender_zip_extended_2', None)
        self.loading_platform = obj.get('loading_platform', None)
        self.loading_platform_sqft = obj.get('loading_platform_sqft', None)
        self.longitude = obj.get('longitude', None)
        self.lot_1 = obj.get('lot_1', None)
        self.lot_2 = obj.get('lot_2', None)
        self.lot_3 = obj.get('lot_3', None)
        self.lot_sqft = obj.get('lot_sqft', None)
        self.market_improvement_percent = obj.get('market_improvement_percent', None)
        self.market_improvement_value = obj.get('market_improvement_value', None)
        self.market_land_value = obj.get('market_land_value', None)
        self.market_value_year = obj.get('market_value_year', None)
        self.match_type = obj.get('match_type', None)
        self.media_room = obj.get('media_room', None)
        self.metro_division = obj.get('metro_division', None)
        self.middle_name = obj.get('middle_name', None)
        self.middle_name_2 = obj.get('middle_name_2', None)
        self.middle_name_3 = obj.get('middle_name_3', None)
        self.middle_name_4 = obj.get('middle_name_4', None)
        self.milkhouse = obj.get('milkhouse', None)
        self.milkhouse_sqft = obj.get('milkhouse_sqft', None)
        self.minor_civil_division_code = obj.get('minor_civil_division_code', None)
        self.minor_civil_division_name = obj.get('minor_civil_division_name', None)
        self.mobile_home_hookup = obj.get('mobile_home_hookup', None)
        self.mortgage_amount = obj.get('mortgage_amount', None)
        self.mortgage_amount_2 = obj.get('mortgage_amount_2', None)
        self.mortgage_due_date = obj.get('mortgage_due_date', None)
        self.mortgage_due_date_2 = obj.get('mortgage_due_date_2', None)
        self.mortgage_interest_rate = obj.get('mortgage_interest_rate', None)
        self.mortgage_interest_rate_type = obj.get('mortgage_interest_rate_type', None)
        self.mortgage_lender_code = obj.get('mortgage_lender_code', None)
        self.mortgage_rate_2 = obj.get('mortgage_rate_2', None)
        self.mortgage_recording_date = obj.get('mortgage_recording_date', None)
        self.mortgage_recording_date_2 = obj.get('mortgage_recording_date_2', None)
        self.mortgage_term = obj.get('mortgage_term', None)
        self.mortgage_term_2 = obj.get('mortgage_term_2', None)
        self.mortgage_term_type = obj.get('mortgage_term_type', None)
        self.mortgage_term_type_2 = obj.get('mortgage_term_type_2', None)
        self.mortgage_type = obj.get('mortgage_type', None)
        self.mortgage_type_2 = obj.get('mortgage_type_2', None)
        self.msa_code = obj.get('msa_code', None)
        self.msa_name = obj.get('msa_name', None)
        self.mud_room = obj.get('mud_room', None)
        self.multi_parcel_flag = obj.get('multi_parcel_flag', None)
        self.name_title_company = obj.get('name_title_company', None)
        self.neighborhood_code = obj.get('neighborhood_code', None)
        self.number_of_buildings = obj.get('number_of_buildings', None)
        self.office = obj.get('office', None)
        self.office_sqft = obj.get('office_sqft', None)
        self.other_tax_exemption = obj.get('other_tax_exemption', None)
        self.outdoor_kitchen_fireplace = obj.get('outdoor_kitchen_fireplace', None)
        self.overhead_door = obj.get('overhead_door', None)
        self.owner_full_name = obj.get('owner_full_name', None)
        self.owner_full_name_2 = obj.get('owner_full_name_2', None)
        self.owner_full_name_3 = obj.get('owner_full_name_3', None)
        self.owner_full_name_4 = obj.get('owner_full_name_4', None)
        self.owner_occupancy_status = obj.get('owner_occupancy_status', None)
        self.ownership_transfer_date = obj.get('ownership_transfer_date', None)
        self.ownership_transfer_doc_number = obj.get('ownership_transfer_doc_number', None)
        self.ownership_transfer_transaction_id = obj.get('ownership_transfer_transaction_id', None)
        self.ownership_type = obj.get('ownership_type', None)
        self.ownership_type_2 = obj.get('ownership_type_2', None)
        self.ownership_vesting_relation_code = obj.get('ownership_vesting_relation_code', None)
        self.parcel_account_number = obj.get('parcel_account_number', None)
        self.parcel_map_book = obj.get('parcel_map_book', None)
        self.parcel_map_page = obj.get('parcel_map_page', None)
        self.parcel_number_alternate = obj.get('parcel_number_alternate', None)
        self.parcel_number_formatted = obj.get('parcel_number_formatted', None)
        self.parcel_number_previous = obj.get('parcel_number_previous', None)
        self.parcel_number_year_added = obj.get('parcel_number_year_added', None)
        self.parcel_number_year_change = obj.get('parcel_number_year_change', None)
        self.parcel_raw_number = obj.get('parcel_raw_number', None)
        self.parcel_shell_record = obj.get('parcel_shell_record', None)
        self.parking_spaces = obj.get('parking_spaces', None)
        self.patio_area = obj.get('patio_area', None)
        self.phase_name = obj.get('phase_name', None)
        self.plumbing_fixtures_count = obj.get('plumbing_fixtures_count', None)
        self.pole_struct = obj.get('pole_struct', None)
        self.pole_struct_sqft = obj.get('pole_struct_sqft', None)
        self.pond = obj.get('pond', None)
        self.pool = obj.get('pool', None)
        self.pool_area = obj.get('pool_area', None)
        self.poolhouse = obj.get('poolhouse', None)
        self.poolhouse_sqft = obj.get('poolhouse_sqft', None)
        self.porch = obj.get('porch', None)
        self.porch_area = obj.get('porch_area', None)
        self.poultry_house = obj.get('poultry_house', None)
        self.poultry_house_sqft = obj.get('poultry_house_sqft', None)
        self.previous_assessed_value = obj.get('previous_assessed_value', None)
        self.prior_sale_amount = obj.get('prior_sale_amount', None)
        self.prior_sale_date = obj.get('prior_sale_date', None)
        self.property_address_carrier_route_code = obj.get('property_address_carrier_route_code', None)
        self.property_address_city = obj.get('property_address_city', None)
        self.property_address_full = obj.get('property_address_full', None)
        self.property_address_house_number = obj.get('property_address_house_number', None)
        self.property_address_post_direction = obj.get('property_address_post_direction', None)
        self.property_address_pre_direction = obj.get('property_address_pre_direction', None)
        self.property_address_state = obj.get('property_address_state', None)
        self.property_address_street_name = obj.get('property_address_street_name', None)
        self.property_address_street_suffix = obj.get('property_address_street_suffix', None)
        self.property_address_unit_designator = obj.get('property_address_unit_designator', None)
        self.property_address_unit_value = obj.get('property_address_unit_value', None)
        self.property_address_zip_4 = obj.get('property_address_zip_4', None)
        self.property_address_zipcode = obj.get('property_address_zipcode', None)
        self.publication_date = obj.get('publication_date', None)
        self.quarter = obj.get('quarter', None)
        self.quarter_quarter = obj.get('quarter_quarter', None)
        self.quonset = obj.get('quonset', None)
        self.quonset_sqft = obj.get('quonset_sqft', None)
        self.range = obj.get('range', None)
        self.recording_date = obj.get('recording_date', None)
        self.roof_cover = obj.get('roof_cover', None)
        self.roof_frame = obj.get('roof_frame', None)
        self.rooms = obj.get('rooms', None)
        self.rv_parking = obj.get('rv_parking', None)
        self.safe_room = obj.get('safe_room', None)
        self.sale_amount = obj.get('sale_amount', None)
        self.sale_date = obj.get('sale_date', None)
        self.sauna = obj.get('sauna', None)
        self.section = obj.get('section', None)
        self.security_alarm = obj.get('security_alarm', None)
        self.senior_tax_exemption = obj.get('senior_tax_exemption', None)
        self.sewer_type = obj.get('sewer_type', None)
        self.shed = obj.get('shed', None)
        self.shed_sqft = obj.get('shed_sqft', None)
        self.silo = obj.get('silo', None)
        self.silo_sqft = obj.get('silo_sqft', None)
        self.sitting_room = obj.get('sitting_room', None)
        self.situs_county = obj.get('situs_county', None)
        self.situs_state = obj.get('situs_state', None)
        self.sound_system = obj.get('sound_system', None)
        self.sports_court = obj.get('sports_court', None)
        self.sprinklers = obj.get('sprinklers', None)
        self.stable = obj.get('stable', None)
        self.stable_sqft = obj.get('stable_sqft', None)
        self.storage_building = obj.get('storage_building', None)
        self.storage_building_sqft = obj.get('storage_building_sqft', None)
        self.stories_number = obj.get('stories_number', None)
        self.storm_shelter = obj.get('storm_shelter', None)
        self.storm_shutter = obj.get('storm_shutter', None)
        self.structure_style = obj.get('structure_style', None)
        self.study = obj.get('study', None)
        self.subdivision = obj.get('subdivision', None)
        self.suffix = obj.get('suffix', None)
        self.suffix_2 = obj.get('suffix_2', None)
        self.suffix_3 = obj.get('suffix_3', None)
        self.suffix_4 = obj.get('suffix_4', None)
        self.sunroom = obj.get('sunroom', None)
        self.tax_assess_year = obj.get('tax_assess_year', None)
        self.tax_billed_amount = obj.get('tax_billed_amount', None)
        self.tax_delinquent_year = obj.get('tax_delinquent_year', None)
        self.tax_fiscal_year = obj.get('tax_fiscal_year', None)
        self.tax_jurisdiction = obj.get('tax_jurisdiction', None)
        self.tax_rate_area = obj.get('tax_rate_area', None)
        self.tennis_court = obj.get('tennis_court', None)
        self.topography_code = obj.get('topography_code', None)
        self.total_market_value = obj.get('total_market_value', None)
        self.township = obj.get('township', None)
        self.tract_number = obj.get('tract_number', None)
        self.transfer_amount = obj.get('transfer_amount', None)
        self.trust_description = obj.get('trust_description', None)
        self.unit_count = obj.get('unit_count', None)
        self.upper_floors_sqft = obj.get('upper_floors_sqft', None)
        self.utility = obj.get('utility', None)
        self.utility_building = obj.get('utility_building', None)
        self.utility_building_sqft = obj.get('utility_building_sqft', None)
        self.utility_sqft = obj.get('utility_sqft', None)
        self.veteran_tax_exemption = obj.get('veteran_tax_exemption', None)
        self.view_description = obj.get('view_description', None)
        self.water_feature = obj.get('water_feature', None)
        self.water_service_type = obj.get('water_service_type', None)
        self.wet_bar = obj.get('wet_bar', None)
        self.widow_tax_exemption = obj.get('widow_tax_exemption', None)
        self.width_linear_footage = obj.get('width_linear_footage', None)
        self.wine_cellar = obj.get('wine_cellar', None)
        self.year_built = obj.get('year_built', None)
        self.zoning = obj.get('zoning', None)

    def __str__(self):
        lines = ['']
        for key, val in vars(self).items():
            if type(val) is list:
                lines.append(key + ': ')
                for item in val:
                    for subkey, subval in vars(item).items():
                        lines += '    {}: {}'.format(subkey, subval).split('\n')
            else:
                lines.append(key + ': ' + str(val))
        return '\n    '.join(lines)


class FinancialAttributes:
    def __init__(self, obj):
        self.assessed_improvement_percent = obj.get('assessed_improvement_percent', None)
        self.assessed_improvement_value = obj.get('assessed_improvement_value', None)
        self.assessed_land_value = obj.get('assessed_land_value', None)
        self.assessed_value = obj.get('assessed_value', None)
        self.assessor_last_update = obj.get('assessor_last_update', None)
        self.assessor_taxroll_update = obj.get('assessor_taxroll_update', None)
        self.contact_city = obj.get('contact_city', None)
        self.contact_crrt = obj.get('contact_crrt', None)
        self.contact_full_address = obj.get('contact_full_address', None)
        self.contact_house_number = obj.get('contact_house_number', None)
        self.contact_mail_info_format = obj.get('contact_mail_info_format', None)
        self.contact_mail_info_privacy = obj.get('contact_mail_info_privacy', None)
        self.contact_mailing_county = obj.get('contact_mailing_county', None)
        self.contact_mailing_fips = obj.get('contact_mailing_fips', None)
        self.contact_post_direction = obj.get('contact_post_direction', None)
        self.contact_pre_direction = obj.get('contact_pre_direction', None)
        self.contact_state = obj.get('contact_state', None)
        self.contact_street_name = obj.get('contact_street_name', None)
        self.contact_suffix = obj.get('contact_suffix', None)
        self.contact_unit_designator = obj.get('contact_unit_designator', None)
        self.contact_value = obj.get('contact_value', None)
        self.contact_zip = obj.get('contact_zip', None)
        self.contact_zip4 = obj.get('contact_zip4', None)
        self.deed_document_page = obj.get('deed_document_page', None)
        self.deed_document_book = obj.get('deed_document_book', None)
        self.deed_document_number = obj.get('deed_document_number', None)
        self.deed_owner_first_name = obj.get('deed_owner_first_name', None)
        self.deed_owner_first_name2 = obj.get('deed_owner_first_name2', None)
        self.deed_owner_first_name3 = obj.get('deed_owner_first_name3', None)
        self.deed_owner_first_name4 = obj.get('deed_owner_first_name4', None)
        self.deed_owner_full_name = obj.get('deed_owner_full_name', None)
        self.deed_owner_full_name2 = obj.get('deed_owner_full_name2', None)
        self.deed_owner_full_name3 = obj.get('deed_owner_full_name3', None)
        self.deed_owner_full_name4 = obj.get('deed_owner_full_name4', None)
        self.deed_owner_last_name = obj.get('deed_owner_last_name', None)
        self.deed_owner_last_name2 = obj.get('deed_owner_last_name2', None)
        self.deed_owner_last_name3 = obj.get('deed_owner_last_name3', None)
        self.deed_owner_last_name4 = obj.get('deed_owner_last_name4', None)
        self.deed_owner_middle_name = obj.get('deed_owner_middle_name', None)
        self.deed_owner_middle_name2 = obj.get('deed_owner_middle_name2', None)
        self.deed_owner_middle_name3 = obj.get('deed_owner_middle_name3', None)
        self.deed_owner_middle_name4 = obj.get('deed_owner_middle_name4', None)
        self.deed_owner_suffix = obj.get('deed_owner_suffix', None)
        self.deed_owner_suffix2 = obj.get('deed_owner_suffix2', None)
        self.deed_owner_suffix3 = obj.get('deed_owner_suffix3', None)
        self.deed_owner_suffix4 = obj.get('deed_owner_suffix4', None)
        self.deed_sale_date = obj.get('deed_sale_date', None)
        self.deed_sale_price = obj.get('deed_sale_price', None)
        self.deed_transaction_id = obj.get('deed_transaction_id', None)
        self.disabled_tax_exemption = obj.get('disabled_tax_exemption', None)
        self.financial_history = get_financial_history(obj.get('financial_history', None))
        self.first_name = obj.get('first_name', None)
        self.first_name_2 = obj.get('first_name_2', None)
        self.first_name_3 = obj.get('first_name_3', None)
        self.first_name_4 = obj.get('first_name_4', None)
        self.homeowner_tax_exemption = obj.get('homeowner_tax_exemption', None)
        self.last_name= obj.get('last_name', None)
        self.last_name_2 = obj.get('last_name_2', None)
        self.last_name_3 = obj.get('last_name_3', None)
        self.last_name_4 = obj.get('last_name_4', None)
        self.market_improvement_percent = obj.get('market_improvement_percent', None)
        self.market_improvement_value = obj.get('market_improvement_value', None)
        self.market_land_value = obj.get('market_land_value', None)
        self.market_value_year = obj.get('market_value_year', None)
        self.match_type = obj.get('match_type', None)
        self.middle_name= obj.get('middle_name', None)
        self.middle_name_2 = obj.get('middle_name_2', None)
        self.middle_name_3 = obj.get('middle_name_3', None)
        self.middle_name_4 = obj.get('middle_name_4', None)
        self.other_tax_exemption = obj.get('other_tax_exemption', None)
        self.owner_full_name = obj.get('owner_full_name', None)
        self.owner_full_name_2 = obj.get('owner_full_name_2', None)
        self.owner_full_name_3 = obj.get('owner_full_name_3', None)
        self.owner_full_name_4 = obj.get('owner_full_name_4', None)
        self.ownership_transfer_date = obj.get('ownership_transfer_date', None)
        self.ownership_transfer_doc_number = obj.get('ownership_transfer_doc_number', None)
        self.ownership_transfer_transaction_id = obj.get('ownership_transfer_transaction_id', None)
        self.ownership_type = obj.get('ownership_type', None)
        self.ownership_type_2 = obj.get('ownership_type_2', None)
        self.previous_assessed_value = obj.get('previous_assessed_value', None)
        self.prior_sale_amount = obj.get('prior_sale_amount', None)
        self.prior_sale_date = obj.get('prior_sale_date', None)
        self.sale_amount = obj.get('sale_amount', None)
        self.sale_date = obj.get('sale_date', None)
        self.senior_tax_exemption = obj.get('senior_tax_exemption', None)
        self.suffix = obj.get('suffix', None)
        self.suffix_2 = obj.get('suffix_2', None)
        self.suffix_3 = obj.get('suffix_3', None)
        self.suffix_4 = obj.get('suffix_4', None)
        self.tax_assess_year = obj.get('tax_assess_year', None)
        self.tax_billed_amount = obj.get('tax_billed_amount', None)
        self.tax_delinquent_year = obj.get('tax_delinquent_year', None)
        self.tax_fiscal_year = obj.get('tax_fiscal_year', None)
        self.tax_rate_area = obj.get('tax_rate_area', None)
        self.total_market_value = obj.get('total_market_value', None)
        self.trust_description = obj.get('trust_description', None)
        self.veteran_tax_exemption = obj.get('veteran_tax_exemption', None)
        self.widow_tax_exemption = obj.get('widow_tax_exemption', None)

    def __str__(self):
        lines = ['']
        for key, val in vars(self).items():
            if type(val) is list:
                lines.append(key + ': ')
                for item in val:
                    for subkey, subval in vars(item).items():
                        lines += '    {}: {}'.format(subkey, subval).split('\n')
            else:
                lines.append(key + ': ' + str(val))
        return '\n    '.join(lines)


def get_financial_history(financial_history_obj):
    if financial_history_obj is None:
        return None
    output = []
    for obj in financial_history_obj:
        output.append(FinancialHistory(obj))
    return output


class FinancialHistory:
    def __init__(self, obj):
        self.code_title_company = obj.get('code_title_company', None)
        self.document_type_description = obj.get('document_type_description', None)
        self.instrument_date = obj.get('instrument_date', None)
        self.interest_rate_type_2 = obj.get('interest_rate_type_2', None)
        self.lender_address = obj.get('lender_address', None)
        self.lender_address_2 = obj.get('lender_address_2', None)
        self.lender_city = obj.get('lender_city', None)
        self.lender_city_2 = obj.get('lender_city_2', None)
        self.lender_code_2 = obj.get('lender_code_2', None)
        self.lender_first_name = obj.get('lender_first_name', None)
        self.lender_first_name_2 = obj.get('lender_first_name_2', None)
        self.lender_last_name = obj.get('lender_last_name', None)
        self.lender_last_name_2 = obj.get('lender_last_name_2', None)
        self.lender_name = obj.get('lender_name', None)
        self.lender_name_2 = obj.get('lender_name_2', None)
        self.lender_seller_carry_back = obj.get('lender_seller_carry_back', None)
        self.lender_seller_carry_back_2 = obj.get('lender_seller_carry_back_2', None)
        self.lender_state = obj.get('lender_state', None)
        self.lender_state_2 = obj.get('lender_state_2', None)
        self.lender_zip = obj.get('lender_zip', None)
        self.lender_zip_2 = obj.get('lender_zip_2', None)
        self.lender_zip_extended = obj.get('lender_zip_extended', None)
        self.lender_zip_extended_2 = obj.get('lender_zip_extended_2', None)
        self.mortgage_amount = obj.get('mortgage_amount', None)
        self.mortgage_amount_2 = obj.get('mortgage_amount_2', None)
        self.mortgage_due_date = obj.get('mortgage_due_date', None)
        self.mortgage_due_date_2 = obj.get('mortgage_due_date_2', None)
        self.mortgage_interest_rate = obj.get('mortgage_interest_rate', None)
        self.mortgage_interest_rate_type = obj.get('mortgage_interest_rate_type', None)
        self.mortgage_lender_code = obj.get('mortgage_lender_code', None)
        self.mortgage_rate_2 = obj.get('mortgage_rate_2', None)
        self.mortgage_recording_date = obj.get('mortgage_recording_date', None)
        self.mortgage_recording_date_2 = obj.get('mortgage_recording_date_2', None)
        self.mortgage_term = obj.get('mortgage_term', None)
        self.mortgage_term_2 = obj.get('mortgage_term_2', None)
        self.mortgage_term_type = obj.get('mortgage_term_type', None)
        self.mortgage_term_type_2 = obj.get('mortgage_term_type_2', None)
        self.mortgage_type = obj.get('mortgage_type', None)
        self.mortgage_type_2 = obj.get('mortgage_type_2', None)
        self.multi_parcel_flag = obj.get('multi_parcel_flag', None)
        self.name_title_company = obj.get('name_title_company', None)
        self.recording_date = obj.get('recording_date', None)
        self.transfer_amount = obj.get('transfer_amount', None)

    def __str__(self):
        return self.__dict__.__str__()
    
class GeoReferenceOutputCategories:
    def __init__(self, obj):
        
        self.census_block = get_geo_reference_census_block(obj.get('census_block', None))
        self.census_county_division = get_geo_reference_census_county_division(obj.get('census_county_division', None))
        self.census_tract = get_geo_reference_census_tract(obj.get('census_tract', None))
        self.core_based_stat_area = get_geo_reference_core_based_stat_area(obj.get('core_based_stat_area', None))
        self.place = get_geo_reference_place(obj.get('place', None))

    def __str__(self):
        lines = ['']
        for key, val in vars(self).items():
            if type(val) is list:
                lines.append(key + ': ')
                for item in val:
                    for subkey, subval in vars(item).items():
                        lines += '    {}: {}'.format(subkey, subval).split('\n')
            else:
                lines.append(key + ': ' + str(val))
        return '\n    '.join(lines)

class GeoReferenceCensusBlock:
    def __init__(self, obj):
        self.accuracy = obj.get('accuracy', None)
        self.geoid = obj.get('geoid', None)

    def __str__(self):
        return self.__dict__.__str__()
    
def get_geo_reference_census_block(geo_reference_census_block_obj):
    if geo_reference_census_block_obj is None:
        return None
    output = []
    output.append(GeoReferenceCensusBlock(geo_reference_census_block_obj))
    return output

class GeoReferenceCensusCountyDivision:
    def __init__(self, obj):
        self.accuracy = obj.get('accuracy', None)
        self.code = obj.get('code', None)
        self.name = obj.get('name', None)

    def __str__(self):
        return self.__dict__.__str__()
    
def get_geo_reference_census_county_division(geo_reference_census_county_division_obj):
    if geo_reference_census_county_division_obj is None:
        return None
    output = []
    output.append(GeoReferenceCensusCountyDivision(geo_reference_census_county_division_obj))
    return output

class GeoReferenceCensusTract:
    def __init__(self, obj):
        self.code = obj.get('code', None)

    def __str__(self):
        return self.__dict__.__str__()
    
def get_geo_reference_census_tract(geo_reference_census_tract_obj):
    if geo_reference_census_tract_obj is None:
        return None
    output = []
    output.append(GeoReferenceCensusTract(geo_reference_census_tract_obj))
    return output

class GeoReferenceCoreBasedStatArea:
    def __init__(self, obj):
        self.code = obj.get('code', None)
        self.name = obj.get('name', None)

    def __str__(self):
        return self.__dict__.__str__()
    
def get_geo_reference_core_based_stat_area(geo_reference_core_based_stat_area_obj):
    if geo_reference_core_based_stat_area_obj is None:
        return None
    output = []
    output.append(GeoReferenceCoreBasedStatArea(geo_reference_core_based_stat_area_obj))
    return output

class GeoReferencePlace:
    def __init__(self, obj):
        self.accuracy = obj.get('accuracy', None)
        self.code = obj.get('code', None)
        self.name = obj.get('name', None)
        self.type = obj.get('type', None)

    def __str__(self):
        return self.__dict__.__str__()

def get_geo_reference_place(geo_reference_place_obj):
    if geo_reference_place_obj is None:
        return None
    output = []
    output.append(GeoReferencePlace(geo_reference_place_obj))
    return output

class RiskAttributes:
    def __init__(self, obj):
        self.AGRIVALUE = obj.get('AGRIVALUE', None)
        self.ALR_NPCTL = obj.get('ALR_NPCTL', None)
        self.ALR_VALA = obj.get('ALR_VALA', None)
        self.ALR_VALB = obj.get('ALR_VALB', None)
        self.ALR_VALP = obj.get('ALR_VALP', None)
        self.ALR_VRA_NPCTL = obj.get('ALR_VRA_NPCTL', None)
        self.AREA = obj.get('AREA', None)
        self.AVLN_AFREQ = obj.get('AVLN_AFREQ', None)
        self.AVLN_ALRB = obj.get('AVLN_ALRB', None)
        self.AVLN_ALRP = obj.get('AVLN_ALRP', None)
        self.AVLN_ALR_NPCTL = obj.get('AVLN_ALR_NPCTL', None)
        self.AVLN_EALB = obj.get('AVLN_EALB', None)
        self.AVLN_EALP = obj.get('AVLN_EALP', None)
        self.AVLN_EALPE = obj.get('AVLN_EALPE', None)
        self.AVLN_EALR = obj.get('AVLN_EALR', None)
        self.AVLN_EALS = obj.get('AVLN_EALS', None)
        self.AVLN_EALT = obj.get('AVLN_EALT', None)
        self.AVLN_EVNTS = obj.get('AVLN_EVNTS', None)
        self.AVLN_EXPB = obj.get('AVLN_EXPB', None)
        self.AVLN_EXPP = obj.get('AVLN_EXPP', None)
        self.AVLN_EXPPE = obj.get('AVLN_EXPPE', None)
        self.AVLN_EXPT = obj.get('AVLN_EXPT', None)
        self.AVLN_EXP_AREA = obj.get('AVLN_EXP_AREA', None)
        self.AVLN_HLRB = obj.get('AVLN_HLRB', None)
        self.AVLN_HLRP = obj.get('AVLN_HLRP', None)
        self.AVLN_HLRR = obj.get('AVLN_HLRR', None)
        self.AVLN_RISKR = obj.get('AVLN_RISKR', None)
        self.AVLN_RISKS = obj.get('AVLN_RISKS', None)
        self.AVLN_RISKV = obj.get('AVLN_RISKV', None)
        self.BUILDVALUE = obj.get('BUILDVALUE', None)
        self.CFLD_AFREQ = obj.get('CFLD_AFREQ', None)
        self.CFLD_ALRB = obj.get('CFLD_ALRB', None)
        self.CFLD_ALRP = obj.get('CFLD_ALRP', None)
        self.CFLD_ALR_NPCTL = obj.get('CFLD_ALR_NPCTL', None)
        self.CFLD_EALB = obj.get('CFLD_EALB', None)
        self.CFLD_EALP = obj.get('CFLD_EALP', None)
        self.CFLD_EALPE = obj.get('CFLD_EALPE', None)
        self.CFLD_EALR = obj.get('CFLD_EALR', None)
        self.CFLD_EALS = obj.get('CFLD_EALS', None)
        self.CFLD_EALT = obj.get('CFLD_EALT', None)
        self.CFLD_EVNTS = obj.get('CFLD_EVNTS', None)
        self.CFLD_EXPB = obj.get('CFLD_EXPB', None)
        self.CFLD_EXPP = obj.get('CFLD_EXPP', None)
        self.CFLD_EXPPE = obj.get('CFLD_EXPPE', None)
        self.CFLD_EXPT = obj.get('CFLD_EXPT', None)
        self.CFLD_EXP_AREA = obj.get('CFLD_EXP_AREA', None)
        self.CFLD_HLRB = obj.get('CFLD_HLRB', None)
        self.CFLD_HLRP = obj.get('CFLD_HLRP', None)
        self.CFLD_HLRR = obj.get('CFLD_HLRR', None)
        self.CFLD_RISKR = obj.get('CFLD_RISKR', None)
        self.CFLD_RISKS = obj.get('CFLD_RISKS', None)
        self.CFLD_RISKV = obj.get('CFLD_RISKV', None)
        self.COUNTY = obj.get('COUNTY', None)
        self.COUNTYFIPS = obj.get('COUNTYFIPS', None)
        self.COUNTYTYPE = obj.get('COUNTYTYPE', None)
        self.CRF_VALUE = obj.get('CRF_VALUE', None)
        self.CWAV_AFREQ = obj.get('CWAV_AFREQ', None)
        self.CWAV_ALRA = obj.get('CWAV_ALRA', None)
        self.CWAV_ALRB = obj.get('CWAV_ALRB', None)
        self.CWAV_ALRP = obj.get('CWAV_ALRP', None)
        self.CWAV_ALR_NPCTL = obj.get('CWAV_ALR_NPCTL', None)
        self.CWAV_EALA = obj.get('CWAV_EALA', None)
        self.CWAV_EALB = obj.get('CWAV_EALB', None)
        self.CWAV_EALP = obj.get('CWAV_EALP', None)
        self.CWAV_EALPE = obj.get('CWAV_EALPE', None)
        self.CWAV_EALR = obj.get('CWAV_EALR', None)
        self.CWAV_EALS = obj.get('CWAV_EALS', None)
        self.CWAV_EALT = obj.get('CWAV_EALT', None)
        self.CWAV_EVNTS = obj.get('CWAV_EVNTS', None)
        self.CWAV_EXPA = obj.get('CWAV_EXPA', None)
        self.CWAV_EXPB = obj.get('CWAV_EXPB', None)
        self.CWAV_EXPP = obj.get('CWAV_EXPP', None)
        self.CWAV_EXPPE = obj.get('CWAV_EXPPE', None)
        self.CWAV_EXPT = obj.get('CWAV_EXPT', None)
        self.CWAV_EXP_AREA = obj.get('CWAV_EXP_AREA', None)
        self.CWAV_HLRA = obj.get('CWAV_HLRA', None)
        self.CWAV_HLRB = obj.get('CWAV_HLRB', None)
        self.CWAV_HLRP = obj.get('CWAV_HLRP', None)
        self.CWAV_HLRR = obj.get('CWAV_HLRR', None)
        self.CWAV_RISKR = obj.get('CWAV_RISKR', None)
        self.CWAV_RISKS = obj.get('CWAV_RISKS', None)
        self.CWAV_RISKV = obj.get('CWAV_RISKV', None)
        self.DRGT_AFREQ = obj.get('DRGT_AFREQ', None)
        self.DRGT_ALRA = obj.get('DRGT_ALRA', None)
        self.DRGT_ALR_NPCTL = obj.get('DRGT_ALR_NPCTL', None)
        self.DRGT_EALA = obj.get('DRGT_EALA', None)
        self.DRGT_EALR = obj.get('DRGT_EALR', None)
        self.DRGT_EALS = obj.get('DRGT_EALS', None)
        self.DRGT_EALT = obj.get('DRGT_EALT', None)
        self.DRGT_EVNTS = obj.get('DRGT_EVNTS', None)
        self.DRGT_EXPA = obj.get('DRGT_EXPA', None)
        self.DRGT_EXPT = obj.get('DRGT_EXPT', None)
        self.DRGT_EXP_AREA = obj.get('DRGT_EXP_AREA', None)
        self.DRGT_HLRA = obj.get('DRGT_HLRA', None)
        self.DRGT_HLRR = obj.get('DRGT_HLRR', None)
        self.DRGT_RISKR = obj.get('DRGT_RISKR', None)
        self.DRGT_RISKS = obj.get('DRGT_RISKS', None)
        self.DRGT_RISKV = obj.get('DRGT_RISKV', None)
        self.EAL_RATNG = obj.get('EAL_RATNG', None)
        self.EAL_SCORE = obj.get('EAL_SCORE', None)
        self.EAL_SPCTL = obj.get('EAL_SPCTL', None)
        self.EAL_VALA = obj.get('EAL_VALA', None)
        self.EAL_VALB = obj.get('EAL_VALB', None)
        self.EAL_VALP = obj.get('EAL_VALP', None)
        self.EAL_VALPE = obj.get('EAL_VALPE', None)
        self.EAL_VALT = obj.get('EAL_VALT', None)
        self.ERQK_AFREQ = obj.get('ERQK_AFREQ', None)
        self.ERQK_ALRB = obj.get('ERQK_ALRB', None)
        self.ERQK_ALRP = obj.get('ERQK_ALRP', None)
        self.ERQK_ALR_NPCTL = obj.get('ERQK_ALR_NPCTL', None)
        self.ERQK_EALB = obj.get('ERQK_EALB', None)
        self.ERQK_EALP = obj.get('ERQK_EALP', None)
        self.ERQK_EALPE = obj.get('ERQK_EALPE', None)
        self.ERQK_EALR = obj.get('ERQK_EALR', None)
        self.ERQK_EALS = obj.get('ERQK_EALS', None)
        self.ERQK_EALT = obj.get('ERQK_EALT', None)
        self.ERQK_EVNTS = obj.get('ERQK_EVNTS', None)
        self.ERQK_EXPB = obj.get('ERQK_EXPB', None)
        self.ERQK_EXPP = obj.get('ERQK_EXPP', None)
        self.ERQK_EXPPE = obj.get('ERQK_EXPPE', None)
        self.ERQK_EXPT = obj.get('ERQK_EXPT', None)
        self.ERQK_EXP_AREA = obj.get('ERQK_EXP_AREA', None)
        self.ERQK_HLRB = obj.get('ERQK_HLRB', None)
        self.ERQK_HLRP = obj.get('ERQK_HLRP', None)
        self.ERQK_HLRR = obj.get('ERQK_HLRR', None)
        self.ERQK_RISKR = obj.get('ERQK_RISKR', None)
        self.ERQK_RISKS = obj.get('ERQK_RISKS', None)
        self.ERQK_RISKV = obj.get('ERQK_RISKV', None)
        self.HAIL_AFREQ = obj.get('HAIL_AFREQ', None)
        self.HAIL_ALRA = obj.get('HAIL_ALRA', None)
        self.HAIL_ALRB = obj.get('HAIL_ALRB', None)
        self.HAIL_ALRP = obj.get('HAIL_ALRP', None)
        self.HAIL_ALR_NPCTL = obj.get('HAIL_ALR_NPCTL', None)
        self.HAIL_EALA = obj.get('HAIL_EALA', None)
        self.HAIL_EALB = obj.get('HAIL_EALB', None)
        self.HAIL_EALP = obj.get('HAIL_EALP', None)
        self.HAIL_EALPE = obj.get('HAIL_EALPE', None)
        self.HAIL_EALR = obj.get('HAIL_EALR', None)
        self.HAIL_EALS = obj.get('HAIL_EALS', None)
        self.HAIL_EALT = obj.get('HAIL_EALT', None)
        self.HAIL_EVNTS = obj.get('HAIL_EVNTS', None)
        self.HAIL_EXPA = obj.get('HAIL_EXPA', None)
        self.HAIL_EXPB = obj.get('HAIL_EXPB', None)
        self.HAIL_EXPP = obj.get('HAIL_EXPP', None)
        self.HAIL_EXPPE = obj.get('HAIL_EXPPE', None)
        self.HAIL_EXPT = obj.get('HAIL_EXPT', None)
        self.HAIL_EXP_AREA = obj.get('HAIL_EXP_AREA', None)
        self.HAIL_HLRA = obj.get('HAIL_HLRA', None)
        self.HAIL_HLRB = obj.get('HAIL_HLRB', None)
        self.HAIL_HLRP = obj.get('HAIL_HLRP', None)
        self.HAIL_HLRR = obj.get('HAIL_HLRR', None)
        self.HAIL_RISKR = obj.get('HAIL_RISKR', None)
        self.HAIL_RISKS = obj.get('HAIL_RISKS', None)
        self.HAIL_RISKV = obj.get('HAIL_RISKV', None)
        self.HRCN_AFREQ = obj.get('HRCN_AFREQ', None)
        self.HRCN_ALRA = obj.get('HRCN_ALRA', None)
        self.HRCN_ALRB = obj.get('HRCN_ALRB', None)
        self.HRCN_ALRP = obj.get('HRCN_ALRP', None)
        self.HRCN_ALR_NPCTL = obj.get('HRCN_ALR_NPCTL', None)
        self.HRCN_EALA = obj.get('HRCN_EALA', None)
        self.HRCN_EALB = obj.get('HRCN_EALB', None)
        self.HRCN_EALP = obj.get('HRCN_EALP', None)
        self.HRCN_EALPE = obj.get('HRCN_EALPE', None)
        self.HRCN_EALR = obj.get('HRCN_EALR', None)
        self.HRCN_EALS = obj.get('HRCN_EALS', None)
        self.HRCN_EALT = obj.get('HRCN_EALT', None)
        self.HRCN_EVNTS = obj.get('HRCN_EVNTS', None)
        self.HRCN_EXPA = obj.get('HRCN_EXPA', None)
        self.HRCN_EXPB = obj.get('HRCN_EXPB', None)
        self.HRCN_EXPP = obj.get('HRCN_EXPP', None)
        self.HRCN_EXPPE = obj.get('HRCN_EXPPE', None)
        self.HRCN_EXPT = obj.get('HRCN_EXPT', None)
        self.HRCN_EXP_AREA = obj.get('HRCN_EXP_AREA', None)
        self.HRCN_HLRA = obj.get('HRCN_HLRA', None)
        self.HRCN_HLRB = obj.get('HRCN_HLRB', None)
        self.HRCN_HLRP = obj.get('HRCN_HLRP', None)
        self.HRCN_HLRR = obj.get('HRCN_HLRR', None)
        self.HRCN_RISKR = obj.get('HRCN_RISKR', None)
        self.HRCN_RISKS = obj.get('HRCN_RISKS', None)
        self.HRCN_RISKV = obj.get('HRCN_RISKV', None)
        self.HWAV_AFREQ = obj.get('HWAV_AFREQ', None)
        self.HWAV_ALRA = obj.get('HWAV_ALRA', None)
        self.HWAV_ALRB = obj.get('HWAV_ALRB', None)
        self.HWAV_ALRP = obj.get('HWAV_ALRP', None)
        self.HWAV_ALR_NPCTL = obj.get('HWAV_ALR_NPCTL', None)
        self.HWAV_EALA = obj.get('HWAV_EALA', None)
        self.HWAV_EALB = obj.get('HWAV_EALB', None)
        self.HWAV_EALP = obj.get('HWAV_EALP', None)
        self.HWAV_EALPE = obj.get('HWAV_EALPE', None)
        self.HWAV_EALR = obj.get('HWAV_EALR', None)
        self.HWAV_EALS = obj.get('HWAV_EALS', None)
        self.HWAV_EALT = obj.get('HWAV_EALT', None)
        self.HWAV_EVNTS = obj.get('HWAV_EVNTS', None)
        self.HWAV_EXPA = obj.get('HWAV_EXPA', None)
        self.HWAV_EXPB = obj.get('HWAV_EXPB', None)
        self.HWAV_EXPP = obj.get('HWAV_EXPP', None)
        self.HWAV_EXPPE = obj.get('HWAV_EXPPE', None)
        self.HWAV_EXPT = obj.get('HWAV_EXPT', None)
        self.HWAV_EXP_AREA = obj.get('HWAV_EXP_AREA', None)
        self.HWAV_HLRA = obj.get('HWAV_HLRA', None)
        self.HWAV_HLRB = obj.get('HWAV_HLRB', None)
        self.HWAV_HLRP = obj.get('HWAV_HLRP', None)
        self.HWAV_HLRR = obj.get('HWAV_HLRR', None)
        self.HWAV_RISKR = obj.get('HWAV_RISKR', None)
        self.HWAV_RISKS = obj.get('HWAV_RISKS', None)
        self.HWAV_RISKV = obj.get('HWAV_RISKV', None)
        self.ISTM_AFREQ = obj.get('ISTM_AFREQ', None)
        self.ISTM_ALRB = obj.get('ISTM_ALRB', None)
        self.ISTM_ALRP = obj.get('ISTM_ALRP', None)
        self.ISTM_ALR_NPCTL = obj.get('ISTM_ALR_NPCTL', None)
        self.ISTM_EALB = obj.get('ISTM_EALB', None)
        self.ISTM_EALP = obj.get('ISTM_EALP', None)
        self.ISTM_EALPE = obj.get('ISTM_EALPE', None)
        self.ISTM_EALR = obj.get('ISTM_EALR', None)
        self.ISTM_EALS = obj.get('ISTM_EALS', None)
        self.ISTM_EALT = obj.get('ISTM_EALT', None)
        self.ISTM_EVNTS = obj.get('ISTM_EVNTS', None)
        self.ISTM_EXPB = obj.get('ISTM_EXPB', None)
        self.ISTM_EXPP = obj.get('ISTM_EXPP', None)
        self.ISTM_EXPPE = obj.get('ISTM_EXPPE', None)
        self.ISTM_EXPT = obj.get('ISTM_EXPT', None)
        self.ISTM_EXP_AREA = obj.get('ISTM_EXP_AREA', None)
        self.ISTM_HLRB = obj.get('ISTM_HLRB', None)
        self.ISTM_HLRP = obj.get('ISTM_HLRP', None)
        self.ISTM_HLRR = obj.get('ISTM_HLRR', None)
        self.ISTM_RISKR = obj.get('ISTM_RISKR', None)
        self.ISTM_RISKS = obj.get('ISTM_RISKS', None)
        self.ISTM_RISKV = obj.get('ISTM_RISKV', None)
        self.LNDS_AFREQ = obj.get('LNDS_AFREQ', None)
        self.LNDS_ALRB = obj.get('LNDS_ALRB', None)
        self.LNDS_ALRP = obj.get('LNDS_ALRP', None)
        self.LNDS_ALR_NPCTL = obj.get('LNDS_ALR_NPCTL', None)
        self.LNDS_EALB = obj.get('LNDS_EALB', None)
        self.LNDS_EALP = obj.get('LNDS_EALP', None)
        self.LNDS_EALPE = obj.get('LNDS_EALPE', None)
        self.LNDS_EALR = obj.get('LNDS_EALR', None)
        self.LNDS_EALS = obj.get('LNDS_EALS', None)
        self.LNDS_EALT = obj.get('LNDS_EALT', None)
        self.LNDS_EVNTS = obj.get('LNDS_EVNTS', None)
        self.LNDS_EXPB = obj.get('LNDS_EXPB', None)
        self.LNDS_EXPP = obj.get('LNDS_EXPP', None)
        self.LNDS_EXPPE = obj.get('LNDS_EXPPE', None)
        self.LNDS_EXPT = obj.get('LNDS_EXPT', None)
        self.LNDS_EXP_AREA = obj.get('LNDS_EXP_AREA', None)
        self.LNDS_HLRB = obj.get('LNDS_HLRB', None)
        self.LNDS_HLRP = obj.get('LNDS_HLRP', None)
        self.LNDS_HLRR = obj.get('LNDS_HLRR', None)
        self.LNDS_RISKR = obj.get('LNDS_RISKR', None)
        self.LNDS_RISKS = obj.get('LNDS_RISKS', None)
        self.LNDS_RISKV = obj.get('LNDS_RISKV', None)
        self.LTNG_AFREQ = obj.get('LTNG_AFREQ', None)
        self.LTNG_ALRB = obj.get('LTNG_ALRB', None)
        self.LTNG_ALRP = obj.get('LTNG_ALRP', None)
        self.LTNG_ALR_NPCTL = obj.get('LTNG_ALR_NPCTL', None)
        self.LTNG_EALB = obj.get('LTNG_EALB', None)
        self.LTNG_EALP = obj.get('LTNG_EALP', None)
        self.LTNG_EALPE = obj.get('LTNG_EALPE', None)
        self.LTNG_EALR = obj.get('LTNG_EALR', None)
        self.LTNG_EALS = obj.get('LTNG_EALS', None)
        self.LTNG_EALT = obj.get('LTNG_EALT', None)
        self.LTNG_EVNTS = obj.get('LTNG_EVNTS', None)
        self.LTNG_EXPB = obj.get('LTNG_EXPB', None)
        self.LTNG_EXPP = obj.get('LTNG_EXPP', None)
        self.LTNG_EXPPE = obj.get('LTNG_EXPPE', None)
        self.LTNG_EXPT = obj.get('LTNG_EXPT', None)
        self.LTNG_EXP_AREA = obj.get('LTNG_EXP_AREA', None)
        self.LTNG_HLRB = obj.get('LTNG_HLRB', None)
        self.LTNG_HLRP = obj.get('LTNG_HLRP', None)
        self.LTNG_HLRR = obj.get('LTNG_HLRR', None)
        self.LTNG_RISKR = obj.get('LTNG_RISKR', None)
        self.LTNG_RISKS = obj.get('LTNG_RISKS', None)
        self.LTNG_RISKV = obj.get('LTNG_RISKV', None)
        self.NRI_VER = obj.get('NRI_VER', None)
        self.POPULATION = obj.get('POPULATION', None)
        self.RESL_RATNG = obj.get('RESL_RATNG', None)
        self.RESL_SCORE = obj.get('RESL_SCORE', None)
        self.RESL_SPCTL = obj.get('RESL_SPCTL', None)
        self.RESL_VALUE = obj.get('RESL_VALUE', None)
        self.RFLD_AFREQ = obj.get('RFLD_AFREQ', None)
        self.RFLD_ALRA = obj.get('RFLD_ALRA', None)
        self.RFLD_ALRB = obj.get('RFLD_ALRB', None)
        self.RFLD_ALRP = obj.get('RFLD_ALRP', None)
        self.RFLD_ALR_NPCTL = obj.get('RFLD_ALR_NPCTL', None)
        self.RFLD_EALA = obj.get('RFLD_EALA', None)
        self.RFLD_EALB = obj.get('RFLD_EALB', None)
        self.RFLD_EALP = obj.get('RFLD_EALP', None)
        self.RFLD_EALPE = obj.get('RFLD_EALPE', None)
        self.RFLD_EALR = obj.get('RFLD_EALR', None)
        self.RFLD_EALS = obj.get('RFLD_EALS', None)
        self.RFLD_EALT = obj.get('RFLD_EALT', None)
        self.RFLD_EVNTS = obj.get('RFLD_EVNTS', None)
        self.RFLD_EXPA = obj.get('RFLD_EXPA', None)
        self.RFLD_EXPB = obj.get('RFLD_EXPB', None)
        self.RFLD_EXPP = obj.get('RFLD_EXPP', None)
        self.RFLD_EXPPE = obj.get('RFLD_EXPPE', None)
        self.RFLD_EXPT = obj.get('RFLD_EXPT', None)
        self.RFLD_EXP_AREA = obj.get('RFLD_EXP_AREA', None)
        self.RFLD_HLRA = obj.get('RFLD_HLRA', None)
        self.RFLD_HLRB = obj.get('RFLD_HLRB', None)
        self.RFLD_HLRP = obj.get('RFLD_HLRP', None)
        self.RFLD_HLRR = obj.get('RFLD_HLRR', None)
        self.RFLD_RISKR = obj.get('RFLD_RISKR', None)
        self.RFLD_RISKS = obj.get('RFLD_RISKS', None)
        self.RFLD_RISKV = obj.get('RFLD_RISKV', None)
        self.RISK_RATNG = obj.get('RISK_RATNG', None)
        self.RISK_SCORE = obj.get('RISK_SCORE', None)
        self.RISK_SPCTL = obj.get('RISK_SPCTL', None)
        self.RISK_VALUE = obj.get('RISK_VALUE', None)
        self.SOVI_RATNG = obj.get('SOVI_RATNG', None)
        self.SOVI_SCORE = obj.get('SOVI_SCORE', None)
        self.SOVI_SPCTL = obj.get('SOVI_SPCTL', None)
        self.STATE = obj.get('STATE', None)
        self.STATEABBRV = obj.get('STATEABBRV', None)
        self.STATEFIPS = obj.get('STATEFIPS', None)
        self.STCOFIPS = obj.get('STCOFIPS', None)
        self.SWND_AFREQ = obj.get('SWND_AFREQ', None)
        self.SWND_ALRA = obj.get('SWND_ALRA', None)
        self.SWND_ALRB = obj.get('SWND_ALRB', None)
        self.SWND_ALRP = obj.get('SWND_ALRP', None)
        self.SWND_ALR_NPCTL = obj.get('SWND_ALR_NPCTL', None)
        self.SWND_EALA = obj.get('SWND_EALA', None)
        self.SWND_EALB = obj.get('SWND_EALB', None)
        self.SWND_EALP = obj.get('SWND_EALP', None)
        self.SWND_EALPE = obj.get('SWND_EALPE', None)
        self.SWND_EALR = obj.get('SWND_EALR', None)
        self.SWND_EALS = obj.get('SWND_EALS', None)
        self.SWND_EALT = obj.get('SWND_EALT', None)
        self.SWND_EVNTS = obj.get('SWND_EVNTS', None)
        self.SWND_EXPA = obj.get('SWND_EXPA', None)
        self.SWND_EXPB = obj.get('SWND_EXPB', None)
        self.SWND_EXPP = obj.get('SWND_EXPP', None)
        self.SWND_EXPPE = obj.get('SWND_EXPPE', None)
        self.SWND_EXPT = obj.get('SWND_EXPT', None)
        self.SWND_EXP_AREA = obj.get('SWND_EXP_AREA', None)
        self.SWND_HLRA = obj.get('SWND_HLRA', None)
        self.SWND_HLRB = obj.get('SWND_HLRB', None)
        self.SWND_HLRP = obj.get('SWND_HLRP', None)
        self.SWND_HLRR = obj.get('SWND_HLRR', None)
        self.SWND_RISKR = obj.get('SWND_RISKR', None)
        self.SWND_RISKS = obj.get('SWND_RISKS', None)
        self.SWND_RISKV = obj.get('SWND_RISKV', None)
        self.TRACT = obj.get('TRACT', None)
        self.TRACTFIPS = obj.get('TRACTFIPS', None)
        self.TRND_AFREQ = obj.get('TRND_AFREQ', None)
        self.TRND_ALRA = obj.get('TRND_ALRA', None)
        self.TRND_ALRB = obj.get('TRND_ALRB', None)
        self.TRND_ALRP = obj.get('TRND_ALRP', None)
        self.TRND_ALR_NPCTL = obj.get('TRND_ALR_NPCTL', None)
        self.TRND_EALA = obj.get('TRND_EALA', None)
        self.TRND_EALB = obj.get('TRND_EALB', None)
        self.TRND_EALP = obj.get('TRND_EALP', None)
        self.TRND_EALPE = obj.get('TRND_EALPE', None)
        self.TRND_EALR = obj.get('TRND_EALR', None)
        self.TRND_EALS = obj.get('TRND_EALS', None)
        self.TRND_EALT = obj.get('TRND_EALT', None)
        self.TRND_EVNTS = obj.get('TRND_EVNTS', None)
        self.TRND_EXPA = obj.get('TRND_EXPA', None)
        self.TRND_EXPB = obj.get('TRND_EXPB', None)
        self.TRND_EXPP = obj.get('TRND_EXPP', None)
        self.TRND_EXPPE = obj.get('TRND_EXPPE', None)
        self.TRND_EXPT = obj.get('TRND_EXPT', None)
        self.TRND_EXP_AREA = obj.get('TRND_EXP_AREA', None)
        self.TRND_HLRA = obj.get('TRND_HLRA', None)
        self.TRND_HLRB = obj.get('TRND_HLRB', None)
        self.TRND_HLRP = obj.get('TRND_HLRP', None)
        self.TRND_HLRR = obj.get('TRND_HLRR', None)
        self.TRND_RISKR = obj.get('TRND_RISKR', None)
        self.TRND_RISKS = obj.get('TRND_RISKS', None)
        self.TRND_RISKV = obj.get('TRND_RISKV', None)
        self.TSUN_AFREQ = obj.get('TSUN_AFREQ', None)
        self.TSUN_ALRB = obj.get('TSUN_ALRB', None)
        self.TSUN_ALRP = obj.get('TSUN_ALRP', None)
        self.TSUN_ALR_NPCTL = obj.get('TSUN_ALR_NPCTL', None)
        self.TSUN_EALB = obj.get('TSUN_EALB', None)
        self.TSUN_EALP = obj.get('TSUN_EALP', None)
        self.TSUN_EALPE = obj.get('TSUN_EALPE', None)
        self.TSUN_EALR = obj.get('TSUN_EALR', None)
        self.TSUN_EALS = obj.get('TSUN_EALS', None)
        self.TSUN_EALT = obj.get('TSUN_EALT', None)
        self.TSUN_EVNTS = obj.get('TSUN_EVNTS', None)
        self.TSUN_EXPB = obj.get('TSUN_EXPB', None)
        self.TSUN_EXPP = obj.get('TSUN_EXPP', None)
        self.TSUN_EXPPE = obj.get('TSUN_EXPPE', None)
        self.TSUN_EXPT = obj.get('TSUN_EXPT', None)
        self.TSUN_EXP_AREA = obj.get('TSUN_EXP_AREA', None)
        self.TSUN_HLRB = obj.get('TSUN_HLRB', None)
        self.TSUN_HLRP = obj.get('TSUN_HLRP', None)
        self.TSUN_HLRR = obj.get('TSUN_HLRR', None)
        self.TSUN_RISKR = obj.get('TSUN_RISKR', None)
        self.TSUN_RISKS = obj.get('TSUN_RISKS', None)
        self.TSUN_RISKV = obj.get('TSUN_RISKV', None)
        self.VLCN_AFREQ = obj.get('VLCN_AFREQ', None)
        self.VLCN_ALRB = obj.get('VLCN_ALRB', None)
        self.VLCN_ALRP = obj.get('VLCN_ALRP', None)
        self.VLCN_ALR_NPCTL = obj.get('VLCN_ALR_NPCTL', None)
        self.VLCN_EALB = obj.get('VLCN_EALB', None)
        self.VLCN_EALP = obj.get('VLCN_EALP', None)
        self.VLCN_EALPE = obj.get('VLCN_EALPE', None)
        self.VLCN_EALR = obj.get('VLCN_EALR', None)
        self.VLCN_EALS = obj.get('VLCN_EALS', None)
        self.VLCN_EALT = obj.get('VLCN_EALT', None)
        self.VLCN_EVNTS = obj.get('VLCN_EVNTS', None)
        self.VLCN_EXPB = obj.get('VLCN_EXPB', None)
        self.VLCN_EXPP = obj.get('VLCN_EXPP', None)
        self.VLCN_EXPPE = obj.get('VLCN_EXPPE', None)
        self.VLCN_EXPT = obj.get('VLCN_EXPT', None)
        self.VLCN_EXP_AREA = obj.get('VLCN_EXP_AREA', None)
        self.VLCN_HLRB = obj.get('VLCN_HLRB', None)
        self.VLCN_HLRP = obj.get('VLCN_HLRP', None)
        self.VLCN_HLRR = obj.get('VLCN_HLRR', None)
        self.VLCN_RISKR = obj.get('VLCN_RISKR', None)
        self.VLCN_RISKS = obj.get('VLCN_RISKS', None)
        self.VLCN_RISKV = obj.get('VLCN_RISKV', None)
        self.WFIR_AFREQ = obj.get('WFIR_AFREQ', None)
        self.WFIR_ALRA = obj.get('WFIR_ALRA', None)
        self.WFIR_ALRB = obj.get('WFIR_ALRB', None)
        self.WFIR_ALRP = obj.get('WFIR_ALRP', None)
        self.WFIR_ALR_NPCTL = obj.get('WFIR_ALR_NPCTL', None)
        self.WFIR_EALA = obj.get('WFIR_EALA', None)
        self.WFIR_EALB = obj.get('WFIR_EALB', None)
        self.WFIR_EALP = obj.get('WFIR_EALP', None)
        self.WFIR_EALPE = obj.get('WFIR_EALPE', None)
        self.WFIR_EALR = obj.get('WFIR_EALR', None)
        self.WFIR_EALS = obj.get('WFIR_EALS', None)
        self.WFIR_EALT = obj.get('WFIR_EALT', None)
        self.WFIR_EVNTS = obj.get('WFIR_EVNTS', None)
        self.WFIR_EXPA = obj.get('WFIR_EXPA', None)
        self.WFIR_EXPB = obj.get('WFIR_EXPB', None)
        self.WFIR_EXPP = obj.get('WFIR_EXPP', None)
        self.WFIR_EXPPE = obj.get('WFIR_EXPPE', None)
        self.WFIR_EXPT = obj.get('WFIR_EXPT', None)
        self.WFIR_EXP_AREA = obj.get('WFIR_EXP_AREA', None)
        self.WFIR_HLRA = obj.get('WFIR_HLRA', None)
        self.WFIR_HLRB = obj.get('WFIR_HLRB', None)
        self.WFIR_HLRP = obj.get('WFIR_HLRP', None)
        self.WFIR_HLRR = obj.get('WFIR_HLRR', None)
        self.WFIR_RISKR = obj.get('WFIR_RISKR', None)
        self.WFIR_RISKS = obj.get('WFIR_RISKS', None)
        self.WFIR_RISKV = obj.get('WFIR_RISKV', None)
        self.WNTW_AFREQ = obj.get('WNTW_AFREQ', None)
        self.WNTW_ALRA = obj.get('WNTW_ALRA', None)
        self.WNTW_ALRB = obj.get('WNTW_ALRB', None)
        self.WNTW_ALRP = obj.get('WNTW_ALRP', None)
        self.WNTW_ALR_NPCTL = obj.get('WNTW_ALR_NPCTL', None)
        self.WNTW_EALA = obj.get('WNTW_EALA', None)
        self.WNTW_EALB = obj.get('WNTW_EALB', None)
        self.WNTW_EALP = obj.get('WNTW_EALP', None)
        self.WNTW_EALPE = obj.get('WNTW_EALPE', None)
        self.WNTW_EALR = obj.get('WNTW_EALR', None)
        self.WNTW_EALS = obj.get('WNTW_EALS', None)
        self.WNTW_EALT = obj.get('WNTW_EALT', None)
        self.WNTW_EVNTS = obj.get('WNTW_EVNTS', None)
        self.WNTW_EXPA = obj.get('WNTW_EXPA', None)
        self.WNTW_EXPB = obj.get('WNTW_EXPB', None)
        self.WNTW_EXPP = obj.get('WNTW_EXPP', None)
        self.WNTW_EXPPE = obj.get('WNTW_EXPPE', None)
        self.WNTW_EXPT = obj.get('WNTW_EXPT', None)
        self.WNTW_EXP_AREA = obj.get('WNTW_EXP_AREA', None)
        self.WNTW_HLRA = obj.get('WNTW_HLRA', None)
        self.WNTW_HLRB = obj.get('WNTW_HLRB', None)
        self.WNTW_HLRP = obj.get('WNTW_HLRP', None)
        self.WNTW_HLRR = obj.get('WNTW_HLRR', None)
        self.WNTW_RISKR = obj.get('WNTW_RISKR', None)
        self.WNTW_RISKS = obj.get('WNTW_RISKS', None)
        self.WNTW_RISKV = obj.get('WNTW_RISKV', None)

    def __str__(self):
        lines = ['']
        for key, val in vars(self).items():
            if type(val) is list:
                lines.append(key + ': ')
                for item in val:
                    for subkey, subval in vars(item).items():
                        lines += '    {}: {}'.format(subkey, subval).split('\n')
            else:
                lines.append(key + ': ' + str(val))
        return '\n    '.join(lines)

class SecondaryRootAddress:
    def __init__(self, obj):
        self.secondary_count = obj.get('secondary_count', None)
        self.smarty_key = obj.get('smarty_key', None)
        self.primary_number = obj.get('primary_number', None)
        self.street_predirection = obj.get('street_predirection', None)
        self.street_name = obj.get('street_name', None)
        self.street_suffix = obj.get('street_suffix', None)
        self.street_postdirection = obj.get('street_postdirection', None)
        self.city_name = obj.get('city_name', None)
        self.state_abbreviation = obj.get('state_abbreviation', None)
        self.zipcode = obj.get('zipcode', None)
        self.plus4_code = obj.get('plus4_code', None)

    def __str__(self):
        lines = ['']
        for key, val in vars(self).items():
            if type(val) is list:
                lines.append(key + ': ')
                for item in val:
                    for subkey, subval in vars(item).items():
                        lines += '    {}: {}'.format(subkey, subval).split('\n')
            else:
                lines.append(key + ': ' + str(val))
        return '\n    '.join(lines)

def get_secondary_root_address(secondary_root_address_obj):
    if secondary_root_address_obj is None:
        return None
    output = []
    output.append(SecondaryRootAddress(secondary_root_address_obj))

    return output

class SecondaryAliases:
    def __init__(self, obj):
        self.smarty_key = obj.get('smarty_key', None)
        self.primary_number = obj.get('primary_number', None)
        self.street_predirection = obj.get('street_predirection', None)
        self.street_name = obj.get('street_name', None)
        self.street_suffix = obj.get('street_suffix', None)
        self.street_postdirection = obj.get('street_postdirection', None)
        self.city_name = obj.get('city_name', None)
        self.state_abbreviation = obj.get('state_abbreviation', None)
        self.zipcode = obj.get('zipcode', None)
        self.plus4_code = obj.get('plus4_code', None)

    def __str__(self):
        lines = ['']
        for key, val in vars(self).items():
            if type(val) is list:
                lines.append(key + ': ')
                for item in val:
                    for subkey, subval in vars(item).items():
                        lines += '    {}: {}'.format(subkey, subval).split('\n')
            else:
                lines.append(key + ': ' + str(val))
        return '\n    '.join(lines)

def get_secondary_aliases(secondary_aliases_obj):
    if secondary_aliases_obj is None:
        return None
    output = []
    for item in secondary_aliases_obj:
        output.append(SecondaryAliases(item))
    return output

class SecondarySecondaries:
    def __init__(self, obj):
        self.smarty_key = obj.get('smarty_key', None)
        self.secondary_designator = obj.get('secondary_designator', None)
        self.secondary_number = obj.get('secondary_number', None)
        self.plus4_code = obj.get('plus4_code', None)

    def __str__(self):
        lines = ['']
        for key, val in vars(self).items():
            if type(val) is list:
                lines.append(key + ': ')
                for item in val:
                    for subkey, subval in vars(item).items():
                        lines += '    {}: {}'.format(subkey, subval).split('\n')
            else:
                lines.append(key + ': ' + str(val))
        return '\n    '.join(lines)

def get_secondary_secondaries(secondary_secondaries_obj):
    if secondary_secondaries_obj is None:
        return None
    output = []
    for item in secondary_secondaries_obj:
        output.append(SecondarySecondaries(item))
    return output

class SecondaryCountAttributes:
    def __init__(self, obj):
        self.smarty_key = obj.get('smarty_key', None)
        self.count = obj.get('count', None)

    def __str__(self):
        return self.__dict__.__str__()